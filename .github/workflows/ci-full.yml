name: CI (Full)

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        postgres: [14, 15, 16]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: . -> target

    - name: Install Docker (for testcontainers)
      run: |
        # Docker is usually pre-installed on GitHub Actions runners,
        # but this ensures Docker service is running
        sudo systemctl start docker
        sudo docker --version

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --all --verbose
      env:
        # Enable testcontainers to use Docker
        TESTCONTAINERS_RYUK_DISABLED: true


  # Additional job for checking minimum supported Rust version
  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain (MSRV)
      uses: dtolnay/rust-toolchain@1.85.0  # Rust 2024 edition minimum
      
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      
    - name: Check MSRV compatibility
      run: cargo check --all